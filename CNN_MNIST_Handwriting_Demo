{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CNN_MNIST_Handwriting_Demo","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"rdd8jhKzEOhg","colab_type":"code","colab":{}},"source":["# computation dependancies\n","import torch\n","import torch.nn as nn\n","from torch.autograd import Variable\n","import torch.nn.functional as F\n","import numpy as np\n","\n","# preprocessing dependancies\n","import torchvision\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import KFold\n","from torch.utils.data import DataLoader\n","from torch.utils.data import Dataset\n","from torchvision.transforms import ToTensor\n","from skimage.transform import resize\n","\n","# visualization dependancies\n","import matplotlib.pyplot as plt\n","from matplotlib import rcParams\n","rcParams['axes.grid'] = False\n","from PIL import Image\n","import PIL.ImageOps as ImageOps\n","import seaborn as sns"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"hexezQa4A2S1","colab_type":"code","outputId":"c0b4c52b-d930-45a0-ca80-dd9467cecd53","executionInfo":{"status":"ok","timestamp":1577385143864,"user_tz":300,"elapsed":25458,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":126}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oY5WW6gkSPch","colab_type":"code","colab":{}},"source":["assert torch.cuda.is_available()\n","precision = 4\n","torch.set_printoptions(precision,sci_mode=False)\n","np.set_printoptions(precision,suppress=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ehjo3wqETNN4","colab_type":"code","outputId":"85a3e835-e7e5-4c25-91bf-b2db8f52bd3a","executionInfo":{"status":"ok","timestamp":1577385146659,"user_tz":300,"elapsed":28170,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":321}},"source":["# downloads data from torchvision dataset\n","official_mnist_train = torchvision.datasets.MNIST(root = 'HOME/data/mnist', train=True, download=True);\n","official_train_images = official_mnist_train.data.numpy().astype(np.float32);\n","official_train_labels = official_mnist_train.targets.numpy().astype(np.int);\n","\n","# prints data specifications...number of examples, image height, image width, and number of classes\n","print('shape (num_examples, image_height, image_width)', official_train_images.shape)\n","print('classes %d to %d' %(np.min(official_train_labels),np.max(official_train_labels)))"],"execution_count":7,"outputs":[{"output_type":"stream","text":["\r0it [00:00, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to HOME/data/mnist/MNIST/raw/train-images-idx3-ubyte.gz\n"],"name":"stdout"},{"output_type":"stream","text":["9920512it [00:01, 9566259.89it/s]                            \n"],"name":"stderr"},{"output_type":"stream","text":["Extracting HOME/data/mnist/MNIST/raw/train-images-idx3-ubyte.gz to HOME/data/mnist/MNIST/raw\n"],"name":"stdout"},{"output_type":"stream","text":["  0%|          | 0/28881 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to HOME/data/mnist/MNIST/raw/train-labels-idx1-ubyte.gz\n"],"name":"stdout"},{"output_type":"stream","text":["32768it [00:00, 142448.44it/s]           \n","  0%|          | 0/1648877 [00:00<?, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["Extracting HOME/data/mnist/MNIST/raw/train-labels-idx1-ubyte.gz to HOME/data/mnist/MNIST/raw\n","Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to HOME/data/mnist/MNIST/raw/t10k-images-idx3-ubyte.gz\n"],"name":"stdout"},{"output_type":"stream","text":["1654784it [00:00, 2333092.25it/s]                            \n","0it [00:00, ?it/s]"],"name":"stderr"},{"output_type":"stream","text":["Extracting HOME/data/mnist/MNIST/raw/t10k-images-idx3-ubyte.gz to HOME/data/mnist/MNIST/raw\n","Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to HOME/data/mnist/MNIST/raw/t10k-labels-idx1-ubyte.gz\n"],"name":"stdout"},{"output_type":"stream","text":["8192it [00:00, 51334.45it/s]            "],"name":"stderr"},{"output_type":"stream","text":["Extracting HOME/data/mnist/MNIST/raw/t10k-labels-idx1-ubyte.gz to HOME/data/mnist/MNIST/raw\n","Processing...\n","Done!\n","shape (num_examples, image_height, image_width) (60000, 28, 28)\n","classes 0 to 9\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"wPSetMZTBIbC","colab_type":"code","outputId":"c3a9b90b-cfe2-42fe-dee8-61eba6f3bee3","executionInfo":{"status":"ok","timestamp":1577385147206,"user_tz":300,"elapsed":28680,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":283}},"source":["# first image\n","plt.imshow(official_train_images[0],cmap='gray')"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f64db5b45f8>"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"2P4enevlV7qI","colab_type":"code","outputId":"73e13aa3-bcbd-44f2-c05e-673a125f67b0","executionInfo":{"status":"ok","timestamp":1577385147208,"user_tz":300,"elapsed":28624,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["# peek at the first 10 data entries\n","example_images = np.concatenate(official_train_images[:10], axis=1)\n","example_labels = official_train_labels[:10]\n","print(example_labels)\n","plt.imshow(example_images,cmap='gray')"],"execution_count":9,"outputs":[{"output_type":"stream","text":["[5 0 4 1 9 2 1 3 1 4]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f64db088128>"]},"metadata":{"tags":[]},"execution_count":9},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXAAAABECAYAAACYhW4wAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAXnElEQVR4nO2de1BUV7bGvw0CJiIiQgQjQhI1DjJK\nwFHjUD5qTNSYEVMZVEo0UteYMYlGbzmjXJWYsSyMVuIrmhHHMFdkNATzIDWSxwU1RBOuGjVMElCJ\nARR8XBVhSBf06f7uH02fdEODPM7ppnH/qlbRnNdaa+/Tq/fZe699BElIJBKJxP3wcLUBEolEIukY\nMoBLJBKJmyIDuEQikbgpMoBLJBKJmyIDuEQikbgpMoBLJBKJm9KpAC6EmCqEKBFCXBRCrNLKKIlE\nIpHcHdHReeBCCE8A5wE8AeAygJMAEkh+r515EolEImmJzrTARwO4SPJHkg0ADgKI08YsiUQikdyN\nHp0490EAFTb/XwYwprUThBAy7VMikUjaz/+RDGq6sTMBvE0IIRYBWKS3HolEIunGlDna2JkAfgVA\nqM3/Axu32UEyDUAaIFvgEolEoiWd6QM/CWCIEOIhIYQ3gDkAcrQxSyKRSCR3o8MtcJKKEOJlAJ8C\n8ATwDsnvNLNMIpFIJK3SqXngJA+THEryEZIbtDLKHYiJiUFMTAzS09NhMpmQnp6O6OhoV5sluUfZ\ntm0btm3bBpIoKipCWFiYq02StJO8vDzk5+e37ySSThMA7Ih4enrS09OTAQEBqqSkpHDjxo3cuHEj\nP/jgAw4YMID/+Mc/SJIGg4EGg4Gvvvpqh/TdTaKionjr1i3eunWLiqKocvPmTV30dUR+97vf8erV\nq3z00Uf56KOPOlX3mjVraDKZaGXChAkuLw9nSe/evdm7d2+GhIRw4cKFTE5Opo+Pj646w8PDefPm\nTd68eZMmk4mKonDKlClO933o0KEcPnw4Fy9eTJI0mUwO5f333+f7779Pb29vXezw8vKil5cXJ0yY\nwOPHj7v8nmiLbNmyhQaDgbt3727pmFOOYqrus1A6wqBBg+Dt7Y1x48YhNjYW/v7+AIBnn33W4fGX\nL1/G9u3b8cwzz6C2thbnzp0DABw7dkxz20aPHo1Dhw6hT58+AACSqK2tRUNDA/r164exY8cCAL75\n5hs0NDS069rjx49Hv3798MEHH3Tazt/85jc4efJkp6/TXhYsWICVK1fCbDar2+6Fl4aEh4dj5cqV\nePzxxwEAkZGR6r6QkBAsXbpUN903btzAF198AQCYMWOGbnocMXz4cCxYsAAAEB8fDw8PDwwYMABm\ns7nFerfa+Ne//hXLli1DTU2NpjZZv5tHjhzB1atXERwcjKtXr2qqQys2btwIAPjjH/8Io9GIvLy8\ndp3fpQJ4VFQUACA/P1+thNawBok1a9bg3//+NzIzM1FVVYXbt28DAEpKSjSz7f7770d0dDT279+P\nkJAQu30XLlzApk2bcPDgQRw/fly1KTU1tV06Jk6ciCFDhnQ6gHt4eOChhx5CWFgYhBCdulZ7CQsL\nQ8+ePZ2ia8wYS9pBYmIiJkyYgOHDhwMAVqxYAQCorKxEbGws9u/fj8LCQl1sGDZsGJYtW4a5c+fi\nvvvuU8u7oqICtbW1+NWvfoVZs2Zh165dAIDi4mLNbairq0NZmcNZZrqTmpqKp556qkPnzp8/H3v3\n7lW/M3oQHBzcpQO4tcHn5eWFL7/8EllZWe06Xy5mJZFIJG5Kl2qBl5eXAwBu3rzZYgu8sLAQ1dXV\nmDRpktpFkZGRobttu3fvRkJCgsN90dHR8PX1xbFjxzBx4kQAwIgRI9qtY/78+fjqq686YyYAyyP7\n888/j/379+vS4muJyZMnY8mSJQAsLc2nn34aAHDt2jXNdc2ePRvbtm0DAAQGBkIIgaNHjyIoKAib\nN29WjxNCICgoCHPmzNFMd58+ffD666+rdvTu3Vvdd+HCBQDAlClT4OXlheLiYgQGBiIwMFAz/U3x\n9/fHyJEjdbt+a3z++ed2LfDr169j79698PDwsOtGGzduHCZMmOB0+5z9BGrL+PHjsXr1aiQkJODW\nrVvN9ickJKhdbaWlpeqTY7voioOYM2fO5N/+9je+9NJLdoMfp0+fZq9evQiAw4cPZ1paGtPS0nQd\nXIiJiWFMTAxv3bql2pGfn8/ly5dz+fLlNJlMrKio4MiRIxkXF6cO3B08eLDdun788UdmZGR02ubc\n3FyazWauXbvWKQMwsbGxjI2NZUVFBY1GI41GI+fPn6+Lrh49enDs2LGsqalRB4/z8/M5adIkenl5\n0dfXl4cPH+bhw4epKApNJhNXrFihqQ0LFiywG7y2SklJCUNDQxkaGkoAHDx4sLrPWkZ6lMmAAQNY\nWlrK0tJSdRBzzZo1DAsL073ue/ToofocGhrK4OBgh8f5+fmxvLzcrryys7N1GeANDAxkYGAgzWYz\nzWYzx44dq3s5OJLi4mKaTKYW672oqEiNF88888zdrudwELNLBnBrhQshmJaWpgbOhIQEp1aAo9km\nH3/8MX19fTl9+nROnz6dycnJDAoKUs+x2lpbW8vo6Og26xoxYgTr6uo0CeAnTpxw6o27Z88e7tmz\nR/U9Ly9PN122wTM3N5e5ubn08/NT9ycmJtoFibKyMrv60UL++c9/2um4ePEiDxw4wEGDBtkd9/vf\n/94pARwA165dy7Vr16oBXFEUvvzyy06p/7ZIfHw8a2tr7cpt69atuuhqGsBdVQ7ffPMNFUXh5MmT\nm+2LiopiTU1Ne2KbewVwq2zevNmu5evh4eGUwh86dCgzMzNV3deuXePZs2f5hz/8odXzrMcrisLM\nzMw261u1ahXNZnOnA3j//v1ZVVVFs9mstgT1lMDAQNVno9HIGzducNKkSbroWr9+vVq227dvp5+f\nn13wBsAffvjBLkjExcVpbseAAQO4bt06rlu3juPGjeMDDzzg8LiFCxc6LYDb3n9dLYDPmTOHeXl5\nzZ5YmtadVuLv709/f3/evn2bZrOZW7ZscbrP69evp9FoZFFRUbMGRK9evXjgwAEqisLjx4/z+PHj\n9PLyuts1HQZwOYgpkUgk7kpXb4H36tWL+fn5zM/Pp8lk4pNPPqn7r6ePjw9zcnKoKAqrq6tZXV3N\nKVOmsF+/fhw4cGCr59q2wAsKCtqsMz09nWazmatWreqU7RkZGTSbzSwuLqa/v7+u5RQeHs7Tp0/b\ntcBTUlI015OSksKUlBSaTCYaDAZ++OGHvO++++yO6dmzJ2fMmMG6ujrVntdee033e6U12bt3r9Nb\n4OQvCTSubIHPnTuXRUVFLCoqosFgsGt5nzp1iqdOnWpWh1pLTk6O01vg1rGAq1ev0mAwOExi2717\nNxVFYXl5eXuu7T6JPLbU1dXh+eefB2BJjtmzZw+OHDmCU6dOYefOnQCgeaLIY489po6sx8VZ3lGh\nR1KQI9qbfOPn54epU6ciMTERAPDkk08CANavX4/q6mrN7bNl6tSpdrNt8vLy1JkhWuHv748XX3wR\ngKWeP/30U8ycOdPumMGDByMzMxMxMTEAgOzsbADApk2bNLWlNZYuXYpevXrZbfv1r38NADhx4oQm\ns4vaQmsJNHoQHh6OefPmAbDMQrISGxvbzI6amhqsWrUKhw8fBgAYDAan2ekMIiMj1RyOwMBA7Nix\no1ncWLFihZr4tGFD51cf6fIBHLBMsQEsWX7p6emYN28e5s2bp35h9u3bh6qqKs30vfnmmxBC4Nix\nY+0O3B4ell4p2ylU7SEgIKDZtpEjR0IIgcmTJ2PgwIEAAG9vb8ydOxceHh4wGAxqokp9fT169OiB\n06dPd0h/W5k5c6aaRfbll18CAJ577jncuXNHUz3e3t52U/CWLl2KBx54AElJSWpGX2RkJHx9fdVW\nyf79+wFYfvz14v777wcARERE4NVXX1V/8JvWf2VlJZKSkmAymXSzxVVERkYiJycHgwYNatPxBQUF\nSEtL09mq5vTr10/X6/fo0QOJiYnq9EnAUv+PP/44kpOT8eabb6rf6/j4eAghsG/fPuzevbvzyrt6\nF0pTiYyM5GeffWY3vXDXrl188MEHNXkEevrpp/nzzz9TURQuW7as3efbdqHs2LGjzeft2rWLJpOJ\nN2/e5JkzZ+zEZDLRbDazoaFB7dI5ceIEt2zZwrlz53LgwIHq+g/Xrl1jQ0ODro+J4eHhduWfnp7O\n9PR0XXT5+/uzqqqKVVVV6rTApoNh5eXlrKiooKIorKqq0tV3Ly8vjh49mhUVFarO2tpaVlRUMCsr\nizU1NXZTHKuqqvinP/2J3t7euq390fT+c9YgZmRkJC9duuRwvRPbrhxbmTZtmu5lYBVrF0p1dbWu\nemxnPln9LCkpUbd9/fXXdvdLB+9R95yF4kj8/f05b948u0L7/PPPNbl2fHw8FUVhZWUlQ0JC2nye\nj48PU1NT1Qr87LPP6Ovr2y7dK1eu5EcffeRQkpKSWp0WuGjRIi5atIhms5kXL17U9YZ9++231fne\nRqNR9wWzxowZwzFjxvDGjRvql2PTpk2MiIhgREQEg4ODefToUSqKomt/p7e3N2fMmGH347F27Vr+\n9re/JQAGBATw7NmzPHv2bLMfmdmzZ3P27Nm6L2xlGzizsrJ01QWAYWFhXL16NVevXs1Ro0YxMjKy\nmWzZskUtB2cG8OXLl+sewGfPnk2j0UiDwcCqqipOmjSJkyZNYlRUlN3MG9uGndFoZEVFBR955JH2\n6JKzUCQSiaRb4Y4tcKvU19ezvr6eJpOJ9fX1nDhxYqevaW2BX7p0qc3n+Pj4cP369WriSFlZmdOX\n83z33Xf57rvv0mw28/XXX9dFR1RUFKOiolhaWqq2vrOzs53qpyMZP3682vJcsmSJLjq8vLyYmppq\nl9D18ccfqzN9goKCePLkSbWlZTAY+Nprr/HQoUN2LfFPPvlEbaFFRUVpbmfTLibrU4or66dPnz4u\naYE/++yzNJvNrKur0y0rNT8/n6WlpUxKSmq2LyIiggUFBc1a4IqicN++fe3V1T26UEaMGMG//OUv\nzM3NtetbO3PmjCZJPtYAvm3btjYdHxUVxczMTCqKwkOHDjnt5mwqtgFcrwzM69ev8/r162rwLigo\naHc3kR4yZcoU9cuhddaldS36jRs3UlEU3rlzh4sXL2bfvn3Zt29fAuCoUaP49ddfU1EUFhcXs7i4\nWE1m8vPz49SpU5mRkcGMjAzeuXNH/RK3p5HQVtm5c2ezbEe9Mh7bKrNmzXJJAI+Li6PZbObPP//M\noUOH6qLjlVdeaTFhbvz48bx9+zYVReGsWbM4a9Ys9Qe1A0lM7hvArX2sO3bs4JUrV5oNjDQ0NPDw\n4cOa3Wwmk4llZWWtHmddC8W6RkoHflE1FWcEcNv53kaj0elLG9zNNj0C+OLFi7l48WIqisKamhrO\nmTOHAQEBnDZtGqdNm8asrCw1RTwlJcVuLRRHkpCQoLbeBw8erHk5LFmyRPcA7uXlxenTp991HndS\nUhKTkpLsBnWdGcAB8Pvvv6fZbOauXbucqrdPnz7csWMHTSYTz58/r8U13S+ABwcHc/ny5XYL9dhK\nYWEhCwsLOWPGDM0K3toCr6+v5/bt29VH3dDQUMbHxzMnJ4dlZWWqDZcuXeKBAwdctmCOVawBnKQu\nC0mlp6fTitV3ZyyW1BbRswVuOwOmrq6Op0+fZnFxcbNByjVr1tDT09PlZQGA58+ft5sNQrK9A2YO\nxZqMlJubS0VRWvyhCggIYGJiIm/fvq22QK2zdfRaZqEl2bp1K+/cucOePXs6VW9ycrI64+RuyX9t\nFPdJ5Onfvz8iIiLw1ltvYdiwYc32FxYWYvPmzfjoo48AdHzOdWt4enrixRdfVN8CVFNTgyFDhqj7\nT5w4AcDy1o+UlBTN9XcUkupcVK2IiorC5MmT1XJuaGjAzp07dVkmtiM8/PDDul3b+iKAoKAg+Pj4\nqMu2WpNRvvjiC3z44Yf46aefusxc7++++04tEy2/G2+99RaAX9429Oc//xm1tbXNjnviiScQHR1t\nbbQBAI4ePYq3334bR44c0cyetkKy3W/H6ijWd5EuXLgQJJGWlobLly/rpk/OQpFIJBJ3pQ3dHqEA\njgD4HsB3AF5p3L4OwBUAZxvlqc50oQQEBPC9997je++9xwsXLjhMAigoKODMmTN1XUNh4MCB/Oqr\nrxzO31QUhdeuXWvzAKczxbYPvJUXo3ZIJk6cSKPRqJaF3vPM2yuRkZFq147WXSjWlxTPmzePW7Zs\nYXJyMvv37++0xJyOyLRp05rdv1p0obQ0x92RmEwmVlZWsrKykrt373Z6F4ZVtm7dSrPZ3Jb1tjWR\n8+fP8/z581QUhX//+9+1vHbH+sABhACIbvzcG8B5ABGwBPAVne0DHzNmDLOzs1leXu4waNfW1nLD\nhg3csGGD+jIHvSUkJITr1q1rFsDfeOMNXQaetBDbPvB7LYADUL80rh6L6AoSFhbGoqIizQO4dTzI\ndpGuplJSUsIzZ85w+/btaiKPK8uisrKSBoOBw4YNc4q+5ORktf9b4x8NbQYxAXwE4AloFMA3btzY\nLGgXFRUxNTWV69ev131Fve4iCxYs4IIFC3RpgQcHB/PYsWNdOoBbX/SQl5fXJeY+d2fx8fHhCy+8\nwBs3blBRLG/Wyc7O5gsvvNDiG3lcJQcPHuS5c+e6zIB7J6TzARxAOIByAH6wBPCfAHwL4B0AfbWe\nhSJFSlvFz8+Pn3zyCRVFYVZWFrOyspz2xCZFihOkc6n0QghfAIcALCNZA+BtAI8AiAJQBeCNFs5b\nJIQ4JYQ41VZdEolEImkDbWx5ewH4FMB/ttIy/5dsgUtxpfj5+XHHjh12aeSutkmKFI3EYQtcNAbW\nFhFCCAD/DeAWyWU220NIVjV+Xg5gDMk5d7lW68okEolE4ojTJEc13diWAB4LoABAEQBrVsB/AUiA\npfuEsPSFv2AN6K1c6waAOgD/107j3ZVA3Du+AtLf7s695G9X8zWMZFDTjXcN4FojhDjl6JekO3Iv\n+QpIf7s795K/7uKrzMSUSCQSN0UGcIlEInFTXBHAnf9WU9dxL/kKSH+7O/eSv27hq9P7wCUSiUSi\nDbILRSKRSNwUpwVwIcRUIUSJEOKiEGKVs/Q6EyHET0KIIiHEWWvmqRAiQAjxuRDiQuPfvq62s6MI\nId4RQlwXQvzLZptD/4SF7Y31/a0QItp1lneMFvxdJ4S40ljHZ4UQT9nsS270t0QIMcU1VncMIUSo\nEOKIEOJ7IcR3QohXGrd3y/ptxV/3qt/2LmbVEQHgCaAUwMMAvAGcAxDhDN3OFFjmwwc22bYJwKrG\nz6sAvO5qOzvh33gA0bDJum3JPwBPAcgFIACMBVDoavs18ncdHCziBssKnecA+AB4qPF+93S1D+3w\ntaVVR7tl/bbir1vVr7Na4KMBXCT5I8kGAAcBxDlJt6uJgyWTFY1/Z7rQlk5B8gsAt5psbsm/OAD7\naOFrAP5CiBDnWKoNLfjbEnEADpKsJ3kJwEVY7nu3gGQVyW8aP9cC+AHAg+im9duKvy3RJevXWQH8\nQQAVNv9fRuuF5a4QwGdCiNNCiEWN2/rzlwzVqwD6u8Y03WjJv+5c5y83dhu8Y9Ml1m38FUKEA3gM\nQCHugfpt4i/gRvUrBzG1JZZkNIBpAF4SQoy33UnLs1i3nfbT3f1rpE2rcLorDlYdVemO9dvRVVa7\nCs4K4FdgeTWblYGN27oVJK80/r0O4ANYHrGuWR8tG/9ed52FutCSf92yzkleI2kiaQawB788Rru9\nv0IIL1iCWSbJ9xs3d9v6deSvu9WvswL4SQBDhBAPCSG8AcwBkOMk3U5BCNFLCNHb+hnAkwD+BYuf\nzzUe9hwsbzTqTrTkXw6A+Y2zFcYCuMO7LHbmDjTp530GljoGLP7OEUL4CCEeAjAEwP86276O0rjq\n6F4AP5B802ZXt6zflvx1u/p14qjvU7CM9JYCWO3q0Vsd/HsYllHqc7C8/Hl14/Z+APIAXADwPwAC\nXG1rJ3w8AMtjpRGWPsD/aMk/WGYn7Gys7yIAo1xtv0b+ZjT68y0sX+oQm+NXN/pbAmCaq+1vp6+x\nsHSPfAubF5V31/ptxV+3ql+ZiSmRSCRuihzElEgkEjdFBnCJRCJxU2QAl0gkEjdFBnCJRCJxU2QA\nl0gkEjdFBnCJRCJxU2QAl0gkEjdFBnCJRCJxU/4fS+vwT4Zm4VQAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Y_09zRamXIGN","colab_type":"code","outputId":"fcfcb375-6e5c-44c0-f445-30242bcdf8d0","executionInfo":{"status":"ok","timestamp":1577385147325,"user_tz":300,"elapsed":28700,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["k_fold = KFold(n_splits = 5, shuffle = True)\n","for train_index, test_index in k_fold.split(official_train_images):\n","  data_train, data_test = official_train_images[train_index], official_train_images[test_index]\n","  labels_train, labels_test = official_train_labels[train_index], official_train_labels[test_index]\n","  break\n","print(data_train.shape)\n","print(data_test.shape)  "],"execution_count":10,"outputs":[{"output_type":"stream","text":["(48000, 28, 28)\n","(12000, 28, 28)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"KbMZj8Dgh3nD","colab":{}},"source":["# function to normalize images of shape (num_examples,height,width)\n","def normalize_images(images):\n","  mean = images.mean(axis=(1,2), keepdims=True)\n","  stdev = images.std(axis=(1,2), keepdims=True)\n","  return (images - mean) / stdev"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3zgZSSjkb0Fm","colab_type":"code","outputId":"73f8f801-6381-45f0-9e14-b52f844e0f0a","executionInfo":{"status":"ok","timestamp":1577385147809,"user_tz":300,"elapsed":29146,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["data_train = normalize_images(data_train)\n","data_test = normalize_images(data_test)\n","print(np.mean(data_train))\n","print(np.std(data_train))"],"execution_count":12,"outputs":[{"output_type":"stream","text":["-2.4237196e-10\n","0.9999995\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1B_Iz8PVm5az","colab_type":"code","colab":{}},"source":["# Dataset Creation Class\n","class ImageDataset(Dataset):\n","  def __init__(self, data, labels):\n","    self.data = data\n","    self.labels = labels\n","\n","  def __len__ (self):\n","    return self.data.shape[0]\n","\n","  def __getitem__(self, idx):\n","    if torch.is_tensor(idx):\n","      idx = idx.tolist()\n","\n","    image = torch.from_numpy(np.expand_dims(self.data[idx],axis=0)).cuda()\n","    target = torch.from_numpy(np.asarray(self.labels[idx])).cuda()\n","\n","    item = {'image': image, 'target': target}\n","    return item"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"EPjt_9ICymDq","colab_type":"code","colab":{}},"source":["class SimpleCNN(torch.nn.Module):\n","  \"\"\"A simple convolutional network.\n","  \n","  Map from inputs with shape [batch_size, 1, height, width] to\n","  outputs with shape [batch_size, 1].\n","  \"\"\"\n","  \n","  def __init__(self):\n","    super().__init__()\n","    self.conv1 = torch.nn.Conv2d(1, 32, kernel_size=7, padding=7//2) # feel free to change these parameters.\n","    self.conv2 = torch.nn.Conv2d(32, 64, kernel_size=3, padding=3//2, stride = 3)\n","    self.conv3 = torch.nn.Conv2d(64, 64, kernel_size=3, padding=3//2)\n","    self.conv4 = torch.nn.Conv2d(64, 128, kernel_size=3, padding=3//2, stride = 3)\n","    self.conv5 = torch.nn.Conv2d(128, 128, kernel_size=4, padding = 0, stride = 1)    \n","    # Final layer maps to 10 outputs which are the 10 classes\n","    self.conv_final = torch.nn.Conv2d(128, 128, kernel_size=1)\n","    self.linear1 = torch.nn.Linear(128,128)\n","    self.linear2 = torch.nn.Linear(128,10)\n","    for m in self.modules():\n","      if isinstance(m, nn.Conv2d) or isinstance(m, nn.ConvTranspose2d):\n","        m.reset_parameters()\n","        torch.nn.init.kaiming_normal_(m.weight.data)\n","        if m.bias is not None:\n","          m.bias.data.zero_()\n","    \n","  def forward(self, x):\n","    x = F.relu(self.conv1(x))\n","    # output (28 - 7 + 6) / 1 + 1 = 28 x 28 x 32\n","    x = F.relu(self.conv2(x))\n","    # output (28 - 3 + 2) / 3 + 1 = 10 x 10 x 32\n","    x = F.relu(self.conv3(x))\n","    # output 10 x 10 x 32\n","    x = F.relu(self.conv4(x))\n","    # output (10-3+2) / 3 + 1 = 4 x 4 x 32\n","    x = F.relu(self.conv5(x))\n","    x = self.conv_final(x)\n","    x = x.squeeze()\n","    x = self.linear1(x)\n","    x = self.linear2(x)\n","    return x"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hvlwbu1rR-Fb","colab_type":"text"},"source":["![alt text](https://miro.medium.com/max/1204/1*TVu5hyywTrUsCAkfJbVHQw.png)"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"KxMEN0hsxMbm","colab":{}},"source":["def train_step(batch_size=128):\n","  global dataloader_train_enumerate\n","\n","  model.train()\n","\n","  try:\n","    i_batch,item_batch = next(dataloader_train_enumerate)\n","    input_batch = item_batch['image']\n","    label_batch = item_batch['target']\n","  except StopIteration:\n","    dataset_train = ImageDataset(data_train, labels_train)\n","    dataloader_train_enumerate = enumerate(DataLoader(dataset_train, batch_size = batch_size, shuffle=True))\n","    i_batch,item_batch = next(dataloader_train_enumerate)\n","    input_batch = item_batch['image']\n","    label_batch = item_batch['target']\n","\n","  output_batch = model(input_batch)\n","\n","  loss = nn.CrossEntropyLoss()\n","  loss = loss(output_batch, label_batch)\n","  _, pred_batch = torch.max(output_batch, dim=1)\n","  error_rate = 1.0 - (pred_batch == label_batch).float().mean()\n","\n","  optimizer.zero_grad()\n","  loss.backward()\n","  \n","  optimizer.step()\n","  return loss.item(), error_rate.item()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"h7JygaaR9KkO","colab":{}},"source":["def val():\n","  global dataloader_test_enumerate\n","  model.eval()\n","\n","  try:\n","    i_batch,item_batch = next(dataloader_test_enumerate)\n","    input_batch = item_batch['image']\n","    label_batch = item_batch['target']\n","  except StopIteration:\n","    dataset_test = ImageDataset(data_test, labels_test)\n","    dataloader_test_enumerate = enumerate(DataLoader(dataset_test, batch_size = val_batch_size, shuffle=True))\n","    i_batch,item_batch = next(dataloader_test_enumerate)\n","    input_batch = item_batch['image']\n","    label_batch = item_batch['target']\n","\n","  output_batch = model(input_batch)\n","\n","  loss = nn.CrossEntropyLoss()\n","  loss = loss(output_batch, label_batch)\n","  _, pred_batch = torch.max(output_batch, dim=1)\n","  error_rate = 1.0 - (pred_batch == label_batch).float().mean()\n","  \n","  return loss.item(), error_rate.item()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"WT_VW8v8CR7V","colab":{}},"source":["# part of filter visualization code\n","def plot_filters_single_channel_big(t):\n","    \n","    #setting the rows and columns\n","    nrows = t.shape[0]*t.shape[2]\n","    ncols = t.shape[1]*t.shape[3]\n","    \n","    \n","    npimg = np.array(t.cpu().detach().numpy(), np.float32)\n","    npimg = npimg.transpose((0, 2, 1, 3))\n","    npimg = npimg.ravel().reshape(nrows, ncols)\n","    \n","    npimg = npimg.T\n","    \n","    fig, ax = plt.subplots(figsize=(ncols/5, nrows/100))    \n","    imgplot = sns.heatmap(npimg, xticklabels=False, yticklabels=False, cmap='gray', ax=ax, cbar=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"6BYCjgBYwyAQ","colab":{}},"source":["def plot_filters_single_channel(t):\n","    \n","    #kernels depth * number of kernels\n","    nplots = t.shape[0]*t.shape[1]\n","    ncols = 12\n","    \n","    nrows = 1 + nplots//ncols\n","    #convert tensor to numpy image\n","    npimg = np.array(t.cpu().detach().numpy(), np.float32)\n","    \n","    count = 0\n","    fig = plt.figure(figsize=(ncols, nrows))\n","    \n","    #looping through all the kernels in each channel\n","    for i in range(t.shape[0]):\n","        for j in range(t.shape[1]):\n","            count += 1\n","            ax1 = fig.add_subplot(nrows, ncols, count)\n","            npimg = np.array(t[i, j].cpu().detach().numpy(), np.float32)\n","            npimg = (npimg - np.mean(npimg)) / np.std(npimg)\n","            npimg = np.minimum(1, np.maximum(0, (npimg + 0.5)))\n","            ax1.imshow(npimg)\n","            ax1.set_title(str(i) + ',' + str(j))\n","            ax1.axis('off')\n","            ax1.set_xticklabels([])\n","            ax1.set_yticklabels([])\n","   \n","    plt.tight_layout()\n","    plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"cWmfCalUvzbS","colab":{}},"source":["def plot_weights(model, layer_num, single_channel = True, collated = False):\n","  \n","  #extracting the model features at the particular layer number\n","  layer = list(model.modules())[layer_num]\n","  \n","  #checking whether the layer is convolution layer or not \n","  if isinstance(layer, nn.Conv2d):\n","    #getting the weight tensor data\n","    weight_tensor = list(list(model.modules())[layer_num].parameters())[0]\n","    \n","    if single_channel:\n","      if collated:\n","        plot_filters_single_channel_big(weight_tensor)\n","      else:\n","        plot_filters_single_channel(weight_tensor)\n","        \n","    else:\n","      if weight_tensor.shape[1] == 3:\n","        plot_filters_multi_channel(weight_tensor)\n","      else:\n","        print(\"Can only plot weights with three channels with single channel = False\")\n","        \n","  else:\n","    print(\"Can only visualize layers which are convolutional\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"i0JD4kopuwtz","colab_type":"code","outputId":"ab24cf3e-66f3-4a8a-b5e6-df1cce7e2d83","executionInfo":{"status":"ok","timestamp":1577390115825,"user_tz":300,"elapsed":27185,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":755}},"source":["# Hyperparameters\n","batch_size = 128\n","val_batch_size = 500\n","lr = .001\n","\n","\n","# instantiates neural network model\n","model = SimpleCNN()\n","model.cuda()\n","optimizer = torch.optim.Adam(model.parameters(), lr=lr)\n","\n","dataset_train = ImageDataset(data_train, labels_train)\n","dataset_test = ImageDataset(data_test, labels_test)\n","\n","# dataloader objects and enumerate for train and test datasets\n","dataloader_train_enumerate = enumerate(DataLoader(dataset_train, batch_size = batch_size, shuffle=True))\n","dataloader_test_enumerate = enumerate(DataLoader(dataset_test, batch_size = val_batch_size, shuffle=True))\n","\n","info = []\n","fig, axs = plt.subplots(2,1,sharex='col',figsize = (10,10))\n","num_steps = 2000\n","num_steps_per_val = 50\n","best_val_err = 1.0\n","for step in range(num_steps):\n","  train_loss, train_err = train_step()\n","  if step % num_steps_per_val == 0:\n","    val_loss, val_err = val()\n","    if val_err < best_val_err:\n","      best_val_err = val_err\n","      print('Step {:5d}: Obtained a best validation error of {:.4f}.'.format(step, best_val_err))\n","    info.append([step, train_loss, val_loss, train_err, val_err])\n","    x, y11, y12, y21, y22 = zip(*info)\n","    axs[0].plot(x, y11, x, y12)\n","    plt.legend(['Train loss', 'Val loss'])\n","    axs[1].plot(x, y21, x, y22)\n","    plt.legend(['Train err', 'Val err'])\n"],"execution_count":310,"outputs":[{"output_type":"stream","text":["Step     0: Obtained a best validation error of 0.8680.\n","Step    50: Obtained a best validation error of 0.0920.\n","Step   100: Obtained a best validation error of 0.0600.\n","Step   150: Obtained a best validation error of 0.0460.\n","Step   200: Obtained a best validation error of 0.0260.\n","Step   250: Obtained a best validation error of 0.0240.\n","Step   400: Obtained a best validation error of 0.0200.\n","Step   500: Obtained a best validation error of 0.0080.\n","Step   950: Obtained a best validation error of 0.0020.\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"In8yBo5V8FCA","colab_type":"code","outputId":"11d4e4a4-511d-48cf-cf66-c34ec509ffc3","executionInfo":{"status":"ok","timestamp":1577390183597,"user_tz":300,"elapsed":589,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}},"colab":{"base_uri":"https://localhost:8080/","height":318}},"source":["# tests personal handwritten images\n","model.eval()\n","test_image = ImageOps.invert(Image.open('/content/drive/My Drive/Colab_Notebooks/Data/Handwritten/handwritten_0.jpg').convert('L'))\n","test_image = np.array((test_image.resize((28,28),resample=4)))\n","test_image = np.expand_dims(test_image,axis=0)\n","test_image = normalize_images(test_image)\n","test_image_imshow = test_image.squeeze()\n","plt.imshow(test_image_imshow,cmap='coolwarm')\n","test_image = torch.from_numpy(test_image).type(torch.FloatTensor).cuda()\n","test_image = test_image.unsqueeze(0).cuda()\n","\n","output_batch = model(test_image)\n","print((output_batch.cpu().detach().numpy()))\n","_, pred_batch = torch.max(output_batch, dim=0)\n","print(pred_batch)"],"execution_count":329,"outputs":[{"output_type":"stream","text":["[12.103  -4.1994 -0.2987 -3.5229 -2.8213  1.0188  0.0402  3.4523 -6.3146\n","  3.3674]\n","tensor(0, device='cuda:0')\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"7Xigep8w3QzQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"outputId":"352c027c-ea37-4148-fa47-adc625e38cfd","executionInfo":{"status":"ok","timestamp":1577390116249,"user_tz":300,"elapsed":27551,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}}},"source":["print(model)"],"execution_count":312,"outputs":[{"output_type":"stream","text":["SimpleCNN(\n","  (conv1): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))\n","  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))\n","  (conv3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","  (conv4): Conv2d(64, 128, kernel_size=(3, 3), stride=(3, 3), padding=(1, 1))\n","  (conv5): Conv2d(128, 128, kernel_size=(4, 4), stride=(1, 1))\n","  (conv_final): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","  (linear1): Linear(in_features=128, out_features=128, bias=True)\n","  (linear2): Linear(in_features=128, out_features=10, bias=True)\n",")\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"biYZKU3_0tay","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":226},"outputId":"1227997b-f9cf-4834-f28f-1cffd34c139e","executionInfo":{"status":"ok","timestamp":1577390117026,"user_tz":300,"elapsed":28311,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}}},"source":["plot_weights(model, 1, single_channel=True)"],"execution_count":313,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nD72NeCipcRDUz4+Tj1bji07WK2slClv1uVuWLwzVz5CnBluXfZ+n56BroxPVuNm5M9S2E0W7v12l\nxg+doOc4yO47q6nx9Adm6SvcGXoTB8RaKTZNn258sHqupZ+AbTyhb2PbBfq4GVLzMXtnCr5jRERE\nREREzuPEiIiIiIiInMeJEThXdO4AABfVSURBVBEREREROY8TIyIiIiIich4nRkRERERE5LzAqnSj\nj/hcjZ98oV5hw1ZFwl5Nye7oJ65R41VyLGXEOoTexAG5dPWpavzXv+gVaHKynlXjtmppADC9xVv6\nAktRsxPu0CtKRW3HX/WqdDlvvqDGg3Jg0+B+SwUWi+KMwXh5JFevRJNVr12ofobmVbQu+7KVXn1u\n9Z6tavzJVTNDbTteyk2Zo8Zbli2vxjPH6RWPGkGvUhbENkaafHypGs/pH3oTcfHxjlQ13vGQAjX+\nbEZTa1+2vJVkBbN4CLt/Gwfp18pqY8KPG5vVV7Uosb4OxOaL9OvKK1tz1HhxftfWaqzPnqDGX8tf\no8avONK6iUjZctDj+O5q/L05U6x9NX/+ZDW+vZ1ebbRCStki9q50NUjbpMYzxt+ixpf91V59r/WD\n+n3edzmJXbFv2dN69bMzBx2nxmePGanGm7TV76UBYMWF+jqJUkE2LLNnjxo/9v6r1Xj5C421r8ov\n6/dQ64/RnwsPS6tUxN79Ed8xIiIiIiIi53FiREREREREzuPEiIiIiIiInMeJEREREREROY8TIyIi\nIiIicp4YY6/80HDMCHXht52fUNtXS62gxotTuShsFbGUussk9EYOwN78DHviFN1PP1+NFyxbaV1n\n+3l65ZO1F+jVbDIe2anGp357b6S56VrjSjU3BRs3huqnJCvJtXlAr37z/ZM3R5obAGj8+GNqfpb3\ns1Whif/5YxP1edU5pbeamxE5X6ntW5crV2Lbfm+7XvnuiabN1Pi0va9GmptGE4eruWk6YJ7afvP7\nTdR4lW4rQm97+fg2aty27ahzYxs3tvOg3d/0alA7D7W/Vlj7ab0S5s/X61XH6jypt486N7bnqvUF\n29T2/Ru0V+PFuaacdIue54Kyegrmjh6SEOMmtUZ1tX3Bhl9LbNthq/8l+jm1zjKeTnz3Zus2cs55\nvhh79meJcv/XcVFPtX1ap9VqvOCMY63b2DhEryBb8+zsonbvD6IeN10Pu1bNzV7LuWOrVnfmAn08\n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\n","text/plain":["<Figure size 864x216 with 32 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"0lV7shTy7BFU","colab_type":"code","colab":{}},"source":["# code to visualize class activations\n","#custom function to conduct occlusion experiments\n","\n","def occlusion(model, image, label, occ_size = 1, occ_stride = 1, occ_pixel = 0.5):\n","  \n","    #get the width and height of the image\n","    width, height = image.shape[-2], image.shape[-1]\n","  \n","    #setting the output image width and height\n","    output_height = int(np.ceil((height-occ_size)/occ_stride))\n","    output_width = int(np.ceil((width-occ_size)/occ_stride))\n","  \n","    #create a white image of sizes we defined\n","    heatmap = torch.zeros((output_height, output_width))\n","    \n","    #iterate all the pixels in each column\n","    for h in range(0, height):\n","        for w in range(0, width):\n","            \n","            h_start = h*occ_stride\n","            w_start = w*occ_stride\n","            h_end = min(height, h_start + occ_size)\n","            w_end = min(width, w_start + occ_size)\n","            \n","            if (w_end) >= width or (h_end) >= height:\n","                continue\n","            \n","            input_image = image.clone().detach()\n","            \n","            #replacing all the pixel information in the image with occ_pixel(grey) in the specified location\n","            input_image[:, :, w_start:w_end, h_start:h_end] = occ_pixel\n","            \n","            #run inference on modified image\n","            output = model(input_image)\n","            output = nn.functional.softmax(output, dim=0)\n","            prob = output.tolist()[label]\n","            \n","            #setting the heatmap location to probability value\n","            heatmap[h, w] = prob \n","\n","    return heatmap"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"g6op8AzPeZjn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":574},"outputId":"b89527dd-4343-41dc-ebec-84f2bd6b1d79","executionInfo":{"status":"ok","timestamp":1577390118142,"user_tz":300,"elapsed":29391,"user":{"displayName":"Ivan Liao","photoUrl":"https://lh4.googleusercontent.com/-HfemOJjJ2go/AAAAAAAAAAI/AAAAAAAAE-w/zTzO1wkmR6I/s64/photo.jpg","userId":"08202891612861478255"}}},"source":["heatmap = occlusion(model, test_image, 9)\n","fig,axs = plt.subplots(2,1,figsize = (5,10))\n","axs[0].imshow(test_image_imshow,cmap='gray')\n","axs[1] = sns.heatmap(heatmap, xticklabels=False, yticklabels=False, cmap='coolwarm', cbar=False)"],"execution_count":315,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 360x720 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"XPVc7eKLG5Gn","colab_type":"code","colab":{}},"source":["# # downsamples too harshly\n","# test_image = Image.open('test_image.jpg').convert('L')\n","# test_image = ToTensor()(test_image.resize((28,28)))\n","# test_image = normalize_images(test_image.)\n","# plt.imshow(test_image.squeeze())\n","# test_image = test_image.unsqueeze(0).cuda()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"eJbxBoO9T51a","colab_type":"code","colab":{}},"source":["# layer = 0\n","# param_int = 0\n","# for m in model.modules():\n","#     if isinstance(m, nn.Conv2d):\n","#       layer +=1\n","#       print('layer', layer)\n","#       if layer == 5:\n","#         plt.imshow(m.parameters()[0][0].cpu().detach().numpy())\n","#       for param in m.parameters():\n","#         param_int += 1\n","#         print('param',param_int)\n","#         print(param.size())\n","\n","# # code to visualize input and predictions\n","#   if step == 200:\n","#     print(pred_batch)\n","#     print(input_batch.size())\n","#     input_images = input_batch.squeeze().cpu().detach().numpy()\n","#     input_images = input_images.reshape(10,10,28,28)\n","#     input_images = np.concatenate(input_images,axis=1)\n","#     input_images = np.concatenate(input_images,axis=1)\n","#     ax[2].imshow(input_images)\n","#     plt.figure(figsize=(20,20))\n","#     plt.show()\n","\n","# #\n","# test_image[test_image < 0 ] = 0\n","# test_image[test_image > 1.4 ] = 5"],"execution_count":0,"outputs":[]}]}